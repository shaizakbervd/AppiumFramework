<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[<a href='C:\Users\shaiz.akber_ventured\IdeaProjects\AppiumFramework\Screenshots\Android_pixel_7_emulator-5554\2025-03-02-17-19-30\LoginTests\ValidLogin.png'><img src='C:\Users\shaiz.akber_ventured\IdeaProjects\AppiumFramework\Screenshots\Android_pixel_7_emulator-5554\2025-03-02-17-19-30\LoginTests\ValidLogin.png' height='100' width='100'/></a>]]>
    </line>
  </reporter-output>
  <suite started-at="2025-03-02T17:19:30 PKT" name="All Test Suite" finished-at="2025-03-02T17:20:28 PKT" duration-ms="58034">
    <groups>
    </groups>
    <test started-at="2025-03-02T17:19:30 PKT" name="Test" finished-at="2025-03-02T17:20:28 PKT" duration-ms="58034">
      <class name="Tests.LoginTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:19:23 PKT" name="beforeSuite" finished-at="2025-03-02T17:19:30 PKT" duration-ms="6672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="BeforeTestHook(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:19:30 PKT" name="BeforeTestHook" finished-at="2025-03-02T17:19:46 PKT" duration-ms="16468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pixel_7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestHook -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:19:46 PKT" name="beforeclass" finished-at="2025-03-02T17:19:46 PKT" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:19:47 PKT" name="beforeMethod" finished-at="2025-03-02T17:19:48 PKT" duration-ms="1538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:19:48 PKT" name="beforemethod" finished-at="2025-03-02T17:19:50 PKT" duration-ms="1496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTests.InvalidUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="InvalidUsername()[pri:1, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:19:50 PKT" name="InvalidUsername" finished-at="2025-03-02T17:20:02 PKT" duration-ms="12336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidUsername -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:02 PKT" name="afterMethod" finished-at="2025-03-02T17:20:04 PKT" duration-ms="1841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvalidUsername status=SUCCESS method=LoginTests.InvalidUsername()[pri:1, instance:Tests.LoginTests@5e82df6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:04 PKT" name="beforeMethod" finished-at="2025-03-02T17:20:05 PKT" duration-ms="914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:05 PKT" name="beforemethod" finished-at="2025-03-02T17:20:05 PKT" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTests.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="invalidPassword()[pri:2, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:05 PKT" name="invalidPassword" finished-at="2025-03-02T17:20:09 PKT" duration-ms="4508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:09 PKT" name="afterMethod" finished-at="2025-03-02T17:20:11 PKT" duration-ms="1468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=LoginTests.invalidPassword()[pri:2, instance:Tests.LoginTests@5e82df6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:11 PKT" name="beforeMethod" finished-at="2025-03-02T17:20:12 PKT" duration-ms="1061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:12 PKT" name="beforemethod" finished-at="2025-03-02T17:20:12 PKT" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tests.LoginTests.ValidLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="ValidLogin()[pri:3, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:12 PKT" name="ValidLogin" finished-at="2025-03-02T17:20:16 PKT" duration-ms="3510" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Productshello] but found [Products]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Productshello] but found [Products]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at Tests.LoginTests.ValidLogin(LoginTests.java:96)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[<a href='C:\Users\shaiz.akber_ventured\IdeaProjects\AppiumFramework\Screenshots\Android_pixel_7_emulator-5554\2025-03-02-17-19-30\LoginTests\ValidLogin.png'><img src='C:\Users\shaiz.akber_ventured\IdeaProjects\AppiumFramework\Screenshots\Android_pixel_7_emulator-5554\2025-03-02-17-19-30\LoginTests\ValidLogin.png' height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:18 PKT" name="afterMethod" finished-at="2025-03-02T17:20:19 PKT" duration-ms="1450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidLogin status=FAILURE method=LoginTests.ValidLogin()[pri:3, instance:Tests.LoginTests@5e82df6a] output=<a href='C:\Users\shaiz.akber_ventured\IdeaProjects\AppiumFramework\Screenshots\Android_pixel_7_emulator-5554\2025-03-02-17-19-30\LoginTests\ValidLogin.png'><img src='C:\Users\shaiz.akber_ventured\IdeaProjects\AppiumFramework\Screenshots\Android_pixel_7_emulator-5554\2025-03-02-17-19-30\LoginTests\ValidLogin.png' height='100' width='100'/></a>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="closure()[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:19 PKT" name="closure" finished-at="2025-03-02T17:20:28 PKT" duration-ms="9036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closure -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Tests.LoginTests@5e82df6a]" started-at="2025-03-02T17:20:29 PKT" name="afterSuite" finished-at="2025-03-02T17:20:29 PKT" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Tests.LoginTests -->
    </test> <!-- Test -->
  </suite> <!-- All Test Suite -->
</testng-results>
